{
  "name": "Test-primme",
  "tagline": "Test primme",
  "body": "\r\nPRIMME: PReconditioned Iterative MultiMethod Eigensolver\r\n========================================================\r\n\r\nPRIMME, pronounced as *prime*, finds a number of eigenvalues and their corresponding eigenvectors of a \r\nreal symmetric, or complex hermitian matrix A. Largest, smallest and interior \r\neigenvalues are supported. Preconditioning can be used to accelerate \r\nconvergence. \r\nPRIMME is written in C, but a complete Fortran 77 interface is also provided.\r\n  \r\nMaking & Linking\r\n----------------\r\n\r\n`Make_flags` has the flags and compilers used to make `libprimme.a`. Set at minimum:\r\n\r\n* `TOP`, path where the PRIMME directory is located.\r\n* `CC`, compiler program like `gcc`, `clang` or `icc`. \r\n\r\nThen do this to generate `libprimme.a`::\r\n\r\n    make lib\r\n\r\nC Library Interface\r\n-------------------\r\n\r\nTo solve real symmetric standard eigenproblems call::\r\n\r\n    int dprimme(double *evals, double *evecs, double *resNorms, \r\n                primme_params *primme);\r\n\r\nTo solve Hermitian standard eigenproblems call::\r\n\r\n    int zprimme(double *evals, Complex_Z *evecs, double *resNorms, \r\n                primme_params *primme);\r\n\r\nThe call arguments are:\r\n\r\n* `evals`, array to return the found eigenvalues;\r\n* `evecs`, array to return the found eigenvectors;\r\n* `rNorms`, array to return the residual of the found eigenpairs; and\r\n* `primme`, structure that specify the matrix problem, which eigenvalues are wanted and several method options.\r\n\r\nCiting this code \r\n----------------\r\n\r\nPlease cite:\r\n\r\n* A. Stathopoulos and J. R. McCombs PRIMME: *PReconditioned Iterative\r\n  MultiMethod Eigensolver: Methods and software description*, ACM\r\n  Transaction on Mathematical Software Vol. 37, No. 2, (2010),\r\n  21:1-21:30.\r\n\r\nMore information on the algorithms and research that led to this\r\nsoftware can be found in the rest of the papers. The work has been\r\nsupported by a number of grants from the National Science Foundation.\r\n\r\n* A. Stathopoulos, *Nearly optimal preconditioned methods for hermitian\r\n  eigenproblems under limited memory. Part I: Seeking one eigenvalue*, SIAM\r\n  J. Sci. Comput., Vol. 29, No. 2, (2007), 481--514.\r\n\r\n* A. Stathopoulos and J. R. McCombs, *Nearly optimal preconditioned\r\n  methods for hermitian eigenproblems under limited memory. Part II:\r\n  Seeking many eigenvalues*, SIAM J. Sci. Comput., Vol. 29, No. 5, (2007),\r\n  2162-2188.\r\n\r\n* J. R. McCombs and A. Stathopoulos, *Iterative Validation of\r\n  Eigensolvers: A Scheme for Improving the Reliability of Hermitian\r\n  Eigenvalue Solvers*, SIAM J. Sci. Comput., Vol. 28, No. 6, (2006),\r\n  2337-2358.\r\n\r\n* A. Stathopoulos, *Locking issues for finding a large number of eigenvectors\r\n  of hermitian matrices*, Tech Report: WM-CS-2005-03, July, 2005.\r\n\r\nContact Information \r\n-------------------\r\n\r\nFor reporting bugs or questions about functionality contact `Andreas Stathopoulos`_.\r\n\r\n.. _`Andreas Stathopoulos`: http://www.cs.wm.edu/~andreas/\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}